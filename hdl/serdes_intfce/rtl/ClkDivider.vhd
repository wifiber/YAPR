----------------------------------------------------
----------------------------------------------------
-- THIS FILE WAS GENERATED BY VISUAL ELITE
-- DO NOT HAND-EDIT UNLESS IT'S ABSOLUTELY NECESSARY!
----------------------------------------------------
----------------------------------------------------
-- GNU LESSER GENERAL PUBLIC LICENSE
----------------------------------------------------
-- This source file is free software; you can redistribute it and/or modify it
-- under the terms of the GNU Lesser General Public License as published by the
-- Free Software Foundation; either version 2.1 of the License, or (at your
-- option) any later version. This source is distributed in the hope that it
-- will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty
-- of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
-- See the GNU Lesser General Public License for more details. You should have
-- received a copy of the GNU Lesser General Public License along with this
-- source; if not, download it from http://www.gnu.org/licenses/lgpl-2.1.html
----------------------------------------------------
----------------------------------------------------
--
--  Library Name :  CommonVisual
--  Unit    Name :  ClkDivider
--  Unit    Type :  Text Unit
--
------------------------------------------------------
------------------------------------------
------------------------------------------
-- Date        : Mon Jun 07 16:03:06 2010
--
-- Author      : Tom Levens <tom.levens@cern.ch>
--
-- Company     : CERN, BE-RF-FB
--
-- Description : Simple clock divider.
--
--               Bit length of counter can be set with generic "N".
--
--               Valid divider values 2 .. 2^N. A divider value of 1 will cause
--               the block to hang.
--
--               Divided clock available on pin "SlowClk" with ~50% duty cycle
--               (duty cycle skew of 1 clk period when using odd dividers).
--
--               Pulses on positive and negative edges of SlowClk waveform
--               available on PosEdge and NegEdge pins.
--
--               Sync pin causes output to be asserted high immediately and
--               PosEdge pulse to be output.
--
--               Enable pin can be left floating (defaults to '1').
--               Sync pin can be left floating (defaults to '0').
--
-- Changelog   : 20121003 (1.1)
--                 Moved to CommonVisual and renamed.
--
--               20120127 (1.8)
--                 Fixed Sync not outputing PosEdge pulse if done when
--                 SlowClk is high.
--
--               20110722 (1.7)
--                 Fix for incorrect pulse widths when using Enable
--                 to chain dividers.
--
--               20110625 (1.6)
--                 Fix for warning in Synplify.
--
--               20101212 (1.5)
--                 Missed some reset conditions, oops!
--
--               20101119 (1.4)
--                 Rewrite to maintain 50% duty cycle even when using odd
--                 values for the clock divider. Also to fix async. glitch
--                 noticed while testing with PeakDetector. Pin naming updated
--                 to make function more clear.
--
--               20101015 (1.3)
--                 Added 50% clock output for ADC clocking. Also added single
--                 clock width strobe output on negative edge of this clock.
--
--               20100906 (1.2)
--                 Version to improve logic usage.
--
--               20100903 (1.1)
--                 Inital revision.
--
------------------------------------------
------------------------------------------

library ieee;
use ieee.STD_LOGIC_1164.all;
use ieee.numeric_std.all;

entity  ClkDivider  is
    generic (
        N           : natural := 16
    );

    port (
        Clk,
        Rst         : in  std_logic;
        Sync        : in  std_logic := '0';
        Enable      : in  std_logic := '1';

        Divider     : in  std_logic_vector(N-1 downto 0);

        PosEdge,
        NegEdge,
        SlowClk     : out std_logic
    );
end;

-- EOF



------------------------------------------
------------------------------------------
-- Date        : Mon Jun 07 16:03:06 2010
--
-- Author      : Tom Levens <tom.levens@cern.ch>
--
-- Company     : CERN, BE-RF-FB
--
------------------------------------------
------------------------------------------

architecture  V1  of  ClkDivider  is

signal      Count       : unsigned(N-1 downto 0);
signal      Half        : unsigned(N-2 downto 0);

signal      SC          : std_logic;
signal      SCPrev      : std_logic;
signal      SCRst       : std_logic;

constant    C_Zero      : unsigned(N-1 downto 0) := (others => '0');

begin
    process (Clk, Rst) begin
        if Rst = '1' then
            SC      <= '0';
            Count   <= C_Zero;
            SCPrev  <= '0';
            SCRst   <= '0';
            Half    <= C_Zero(N-2 downto 0);
        elsif rising_edge(Clk) then
            SCPrev <= SC;
            SCRst   <= '0';

            if Enable = '1' then
                Count  <= Count - 1;

                if Count = C_Zero or Sync = '1' then
                    Half  <= unsigned(Divider(N-1 downto 1));
                    Count <= unsigned(Divider) - 1;
                    SC    <= '1';
                    SCRst <= '1';
                elsif Count = '0' & Half then
                    SC <= '0';
                end if;
             end if;
        end if;
    end process;

    SlowClk <= SC;
    PosEdge <= '1' when (SC = '1' and SCPrev = '0') or SCRst = '1' else '0';
    NegEdge <= '1' when SC = '0' and SCPrev = '1' else '0';
end;

-- EOF



